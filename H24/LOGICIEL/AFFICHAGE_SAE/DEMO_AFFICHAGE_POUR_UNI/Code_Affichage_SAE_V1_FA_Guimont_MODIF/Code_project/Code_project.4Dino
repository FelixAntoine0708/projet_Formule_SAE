/*
Programme : Code_project.4Dino
Auteur :    F�lix-Antoine Guimont
Modifi� :	  Marc-�tienne Gendron-Fontaine
Date :      22 mars 2024
Brief :     Ce fichier contient la deuxi�me version de ce que pourrait �tre l'affichage. Les donn�es sont fictives.
            Ce code a été modifié et commenté par Marc-Étienne Gendron-Fontaine. Il est plus lisible maintenant!

Mat�rielle: ESP32-S3R8 (dans l'�cran), �cran gen4_ESP32_70CT
Encironement: Workshop 4 V4.9.0.7,
Syst�me d'exploitation: Windows 10 V22H2.

*/




#include "gfx4desp32_%%displaynm%%.h"

gfx4desp32_%%displaynm%% gfx = gfx4desp32_%%displaynm%%();

#include "Code_projectConst.h"    // Note. This file will not be created if there are no generated graphics



// Prototype de fonction

void showTemp();
void showLV();
void showHV();
void touch();





void setup()
{
  gfx.begin();
  gfx.Cls();
  gfx.ScrollEnable(false);
  gfx.BacklightOn(true);
  gfx.Orientation(%%orientation%%);
  gfx.SmoothScrollSpeed(5);
  gfx.TextColor(WHITE, BLACK); gfx.Font(2);  gfx.TextSize(1);
  gfx.Open4dGFX("Code_project"); // Opens DAT and GCI files for read using filename without extension.
  gfx.touch_Set(TOUCH_ENABLE);                // Global touch enabled


  showTemp();
} // end Setup **do not alter, remove or duplicate this line**

void loop()
{

	//int state;

  touch();



// NE PAS EFFACER AVANT LA FIN (SINON PEUT CAUSER DES PROBLEME DE MARDE)

  // put your main code here, to run repeatedly:
 /* int itouched, val ;
  if(gfx.touch_Update())
  {
    itouched = gfx.imageTouched() ;
    switch (itouched)
    {                                                         // start touched selection **do not alter, remove or duplicate this line**
      // case statements for Knobs and Sliders go here
      default :                                               // end touched selection **do not alter, remove or duplicate this line**
        int button = gfx.ImageTouchedAuto();    // use default for keyboards and buttons
        val = gfx.getImageValue(button);
        switch (button)
        {                                                     // start button selection **do not alter, remove or duplicate this line**
          // case, one for each button or keyboard, default should end up as -1
        }                                                     // end button selection **do not alter, remove or duplicate this line**
    }
  } */
// NE PAS EFFACER AVANT LA FIN (SINON PEUT CAUSER DES PROBLEME DE MARDE)


}


/*
Brief   : Regarde quel bouton a été pressé et affiche la page en conséquence.
Param   : Rien
Return  : Rien
*/
void touch()
{
  /*
  Si l'écran détecte un événement (touch_Update), on regarde si le
  dernier statut (touch_GetPen) est une pression sur l'écran. On regarde,
  ensuite, quel bouton a été pressé et on affiche la page en conséquence.
  */
  if(gfx.touch_Update())
  {
    if(gfx.touch_GetPen() == TOUCH_PRESSED)
    {
      if(gfx.imageTouched() == iWinbutton1 || gfx.imageTouched() == iWinbutton5)
         showHV();
      else if(gfx.imageTouched() == iWinbutton2 || gfx.imageTouched() == iWinbutton6)
         showLV();
      else if(gfx.imageTouched() == iWinbutton3 || gfx.imageTouched() == iWinbutton4)
          showTemp();
    }

  }
}



/*
Brief   : Affiche la page Température
Param   : Rien
Return  : Rien
*/
void showTemp(){
  
  gfx.Cls();  // Efface l'écran
  
  // iAngularmeter
  gfx.UserImages(iAngularmeter1, 0);  // Coolant Temp
  gfx.UserImages(iAngularmeter2, 0);  // Drive Temp
  gfx.UserImages(iAngularmeter3, 0);  // Motor Temp
  
  // TXT LABEL
  gfx.UserImage(iStatictext6);  // Text Title
  gfx.UserImage(iStatictext1);  // text coolant Temp
  gfx.UserImage(iStatictext2);  // text Dirive Temp
  gfx.UserImage(iStatictext3);  // Text Motor Temp


  // BTN AFF
  gfx.UserImages(iWinbutton1,0);  // HV BTN
  gfx.UserImages(iWinbutton2,0);  // LV BTN
  gfx.UserImages(iWinbutton4,0);  // TEMP BTN

  // BTN SETUP
  gfx.imageTouchEnable(iWinbutton1, true);    // BTN HV ACTIF
  gfx.imageTouchEnable(iWinbutton2, true);    // BTN LV ACTIF
  gfx.imageTouchEnable(iWinbutton4, false);   // BTN TEMP NON-ACTIF
  gfx.imageTouchEnable(iWinbutton3, false);   // BTN TEMP NON-ACTIF

}  




/*
Brief   : Affiche la page LV
Param   : Rien
Return  : Rien
*/
void showLV(){
  
  gfx.Cls();  // Efface l'écran
  
  // WIDGET
  gfx.UserImages(iAngularmeter4,0);                     // LV TEMP
  gfx.UserImages(iMeter1,0);                            // SOC LV
  gfx.LedDigitsDisplay(0, iiLeddigits1, 4, 2, 40, 0);   // VOLT LV
  gfx.UserImage(iLeddigits1);                           // VOLT LV


  // TXT LABEL
  gfx.UserImage(iStatictext4);  // TEMP_LV_TXT
  gfx.UserImage(iStatictext5);  // SOC_LV_TXT
  gfx.UserImage(iStatictext8);  // VOLT_LV_TXT
  gfx.UserImage(iStatictext7);  // Text Title

  // BTN AFF
  gfx.UserImages(iWinbutton2,0);  // LV BTN
  gfx.UserImages(iWinbutton4,0);  // TEMP BTN
  gfx.UserImages(iWinbutton1,0);  // HV BTN

  // BTN SETUP
  gfx.imageTouchEnable(iWinbutton2, false);   // BTN LV NON-ACTIF
  gfx.imageTouchEnable(iWinbutton6, false);   // BTN LV NON-ACTIF
  gfx.imageTouchEnable(iWinbutton4, true);    // BTN TEMP ACTIF
  gfx.imageTouchEnable(iWinbutton1, true);    // BTN HV ACTIF

}




/*
Brief   : Affiche la page HV
Param   : Rien
Return  : Rien
*/
void showHV(){
  
  gfx.Cls();  // Efface l'écran

  // WIDGET
  gfx.UserImages(iAngularmeter5,0);                     // TEMP HV
  gfx.UserImages(iTank1,0);                             // SOH HV
  gfx.UserImages(iMeter2,0);                            // SOC HV
  gfx.LedDigitsDisplay(0, iiLeddigits2, 3, 1, 40, 0);   // VOLT HV
  gfx.UserImage(iLeddigits2);                           // VOLT HV


  // TXT LABEL
  gfx.UserImage(iStatictext10);   // Text Title
  gfx.UserImage(iStatictext9);    // VOLT_HV_TXT
  gfx.UserImage(iStatictext11);   // TEMP_HV_TXT
  gfx.UserImage(iStatictext13);   // SOH_HV_TXT
  gfx.UserImage(iStatictext12);   // SOC_HV_TXT

  // BTN AFF
  gfx.UserImages(iWinbutton3,0);  // TEMP BTN
  gfx.UserImages(iWinbutton2,0);  // LV BTN
  gfx.UserImages(iWinbutton1,0);  // HV BTN

  // BTN SETUP
  gfx.imageTouchEnable(iWinbutton3, true);    // TEMP BTN ACTIF
  gfx.imageTouchEnable(iWinbutton2, true);    // LV BTN ACTIF
  gfx.imageTouchEnable(iWinbutton1, false);   // HV BTN NON-ACTIF
  gfx.imageTouchEnable(iWinbutton5, false);   // HV BTN NON-ACTIF

}
